services:

  database:
    image: postgres:16
    restart: unless-stopped
    expose:
      - "5432"
    volumes:
      - warp-db-data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - warp

  warp:
    build:
      context: .
    restart: unless-stopped
    expose:
      - "8000"
    depends_on:
      - database
    environment:
      WARP_DATABASE: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}"
      WARP_SECRET_KEY: "${WARP_SECRET_KEY}"
      WARP_DATABASE_INIT_SCRIPT: '["sql/schema.sql","sql/sample_data.sql"]'
      WARP_LANGUAGE_FILE: 'i18n/en.js'
      WARP_SESSION_LIFETIME: 7
      WARP_WEEKS_IN_ADVANCE: 1
    networks:
      - warp
      - proxy-net

  warp-db-backup:
    image: eeshugerman/postgres-backup-s3:16
    environment:
      SCHEDULE: ${SCHEDULE-@every 1h}
      BACKUP_KEEP_DAYS: ${BACKUP_KEEP_DAYS-30}
      S3_REGION: us-east-1
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_PREFIX: ${S3_PREFIX-warp_db_backups}
      POSTGRES_HOST: database
      POSTGRES_DATABASE: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - warp
    depends_on:
      - database


networks:
  proxy-net:
    external: true
  warp:
    name: warp-net
    external: false
    driver_opts:
      com.docker.network.driver.mtu: ${NETWORK_MTU-1500}

volumes:
  warp-db-data:
